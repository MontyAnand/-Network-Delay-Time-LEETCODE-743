 PROBLEM : Network Delay Time
 You are given a network of n nodes, labeled from 1 to n. You are also given times, a list of travel times as directed edges times[i] = (ui, vi, wi), where ui is the source node, vi is the target node, and wi is the time it takes for a signal to travel from source to target.

We will send a signal from a given node k. Return the minimum time it takes for all the n nodes to receive the signal. If it is impossible for all the n nodes to receive the signal, return -1.

SOLUTION CODE :

int networkDelayTime(vector<vector<int>>& times, int n, int k) {
        vector<vector<int>>graph(n+1);
        vector<vector<long long>>time(n+1,vector<long long>(n+1,INT_MAX));
        for(auto a : times){
            graph[a[0]].push_back(a[1]);
            time[a[0]][a[1]]=a[2];
        }
        vector<int>vis(n+1,0);
        time[k][k]=0;
       bool flag = true;
       vis[k]=1;
       int index=k;
       while(flag){
           int x = INT_MAX;
           index=-1;
           for(int i=1;i<=n;i++){
               if(vis[i]==1)continue;
               if(x>time[k][i]){
                   x=time[k][i];
                   index=i;
               }
           }
           if(index==-1)break;
           vis[index]=1;
           for(int i=1;i<=n;i++){
               if(vis[i]==1)continue;
               if(time[k][index]+time[index][i]<time[k][i])time[k][i]=time[k][index]+time[index][i];
           }
       }
       long long ans = INT_MIN;
       for(int i=1;i<=n;i++){
           if(time[k][i]>ans)ans=time[k][i];
       }
       if(ans>=INT_MAX)return -1;
       return ans;
    }
